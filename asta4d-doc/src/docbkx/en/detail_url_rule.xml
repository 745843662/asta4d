<?xml version="1.0" encoding="UTF-8"?>
<chapter xml:id="chapter-detail-url-rule"
    xmlns="http://docbook.org/ns/docbook" version="5.0"
    xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
        http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd">
  <title>URL rule</title>
  
  <sect1>
    <title>Rule apis</title>
    <sect2>
      <title>UrlMappingRuleInitializer</title>
      <para>All the url mapping rules can be supplied by implementing the UrlMappingRuleInitializer interface which can be configured by 
      WebApplicationConfiguration#setUrlMappingRuleInitializer.</para>
      
      <para>UrlMappingRuleInitializer's initUrlMappingRules method does not return configured rules directly, it supply a UrlMappingRuleHelper
      instance by parameter instead. The UrlMappingRuleHelper afford a group of methods to help developers build url mapping rules.</para>
      
      <para>UrlMappingRuleHelper allows add new rule by add methods, which will be discussed in next section, let us see the global configuration
      methods of UrlMappingRuleHelper at first.</para>

      <itemizedlist>
        <listitem>
          <para>addDefaultRequestHandler(Object... handlerList)</para>
        </listitem>
        <listitem>
          <para>addDefaultRequestHandler(String attribute, Object... handlerList)</para>
          <sbr/>
          <para>There are two overloaded methods of addDefaultRequestHandler. Added request handlers without attribute declaration will be applied 
          to all the rules and the ones with attribute declaration will be applied to therules with same attribute only.
          </para>
          <sbr/>
        </listitem>
        <listitem>
          <para>addGlobalForward(Object result, String targetPath)</para>
        </listitem>
        <listitem>
          <para>addGlobalForward(Object result, String targetPath, int status) </para>
          <sbr/>
          <para>There are two overloaded methods of addGlobalForward. The one with status parameter can customize the http response code with specified
          status code or the default code 200 will be returned to client.</para>
          <sbr/>
        </listitem>
        <listitem>
          <para>addGlobalRedirect(Object result, String targetPath) </para>
          <sbr/>
          <para>A global redirect result mapping can be declared. There is a convention about the format of target path(the normal redirect on special rules follows
          the same convention):</para>
          <itemizedlist>
            <listitem>
              <para>common url string("http://www.example.com/somepage.html")</para>
              <para>The target url will be redirected as temporary(code 302).</para>
            </listitem>
            <listitem>
              <para>common url string with prefix("301:http://www.example.com/somepage.html")</para>
              <para>The target url will be redirected as specified code by the prefix. 301 or 302 are acceptable and "p" or "t" can be used to represent "permanent"
              or "temporary" as well(which means "301:http://www.example.com/somepage.html" equals to "p:http://www.example.com/somepage.html").</para>
            </listitem>
          </itemizedlist>
          <sbr/>
        </listitem>
        <listitem>
          <para>addRequestHandlerInterceptor(Object... interceptorList)</para>
        </listitem>
        <listitem>
          <para>addRequestHandlerInterceptor(String attribute, Object... interceptorList)</para>
          <para><remark>The request handler interceptor is need to be clarified more in the implementation. We skip the description at present.</remark></para>
          <sbr/>
        </listitem>
        <listitem>
          <para>setDefaultMethod(HttpMethod defaultMethod) </para>
          <para>The default matching http method for url patterns without http method specified. The default value is GET.</para>
        </listitem>
      </itemizedlist>
    </sect2>
    <sect2>
      <title>Handy rules</title>
      <para>There several add methods from UrlMappingRuleHelper which can be used to add new url rules. According to the certain being called add method, different
      interface which is called handy rules will be returned for further declaration. Further, all the methods of the returned handy rule interface will return different
      interface according to the certain method you are calling, it is complex to describe which interface will be returned on certain case, basically we suppose that 
      the code auto completion function of you editor would help you to know what you can do in the next step.  All of these handy rules and their methods can be treated
      as a group of DSL to help you build your own url rules for your site. We will describe all the available methods at following regardless of which certain interface
      it belongs to. After that, we will also describe the basic rule of how the returned handy rules change.</para>
      
      <itemizedlist>
        <listitem>
          <para>add(String sourcePath)</para>
        </listitem>
        <listitem>
          <para>add(String sourcePath, String targetPath) </para>
        </listitem>
        <listitem>
          <para>add(HttpMethod method, String sourcePath) </para>
        </listitem>
        <listitem>
          <para>add(HttpMethod method, String sourcePath, String targetPath)</para>
          <sbr/>
          <para>Add a new url rule. If the http method is not specified. the configured default method(see above setDefaultMethod) will be specified by default. If you
          want the sourcePath is matched to all the http methods, null can be specified. The targetPath should be a template file path or a redirect target url string
          with prefix "redirect:", the part after prefix "redirect:" follows the convention of redirect string format introduced in global redirect configuration.
          </para>
          <sbr/>
        </listitem>
      </itemizedlist>
    </sect2>
  </sect1>
  
  <sect1>
    <title>Request handler result process</title>
    <sect2>
      <title>Content provider</title>
    </sect2>
    <sect2>
      <title>Result transforming</title>
    </sect2>
    <sect2>
      <title>Request handler chain</title>
    </sect2>
  </sect1>

</chapter>