<?xml version="1.0" encoding="UTF-8"?>
<chapter xml:id="chapter-overview"
    xmlns="http://docbook.org/ns/docbook" version="5.0"
    xmlns:xl="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd
        http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd">
  <title>Overview</title>
  
  <section>
    <title>Why Asta4D</title>
    <para>In the past decade, plenty of Java based web application frameworks are generated. Especially the MVC 
    architecture and JSP tag libs (or other traditional template technologies) that has greatly released our productivity. 
    But unfortunately, we are still suffering from the following situations:
    </para>
    
    <itemizedlist>
      <listitem>
        <para>The designers or front-end engineers are keeping complaining the mixed-in dynamic code, as they disturb 
        their efforts of redesigning the page style or structure. And in the mean time, the back-end developers are also 
        complaining that the front-end guys break the working page frequently,  because redesign or the new design is hard 
        to merge due to the huge cost of source refactoring. </para>
      </listitem>

      <listitem>
        <para>The developers are complaining about the poor functionalities of template language which they are using 
        and tired from the various magic skills for complex rendering logic.</para>
      </listitem>

      <listitem>
        <para>The developers are discontented with the counterproductivity of MVC architecture and desire a more efficient 
        approach like traditional PHP/ASP development.</para>
      </listitem>

    </itemizedlist>
  </section>
  
  <section>
    <title>How Asta4D helps us</title>
    <para>Asta4D is our solution to combat those issues. Thanks to lift, from where we learn a lot. We designed Asta4D complying
    with the following points:
    </para>
    
    <itemizedlist>
      <listitem>
        <para>Separate template and rendering logic</para>
        <para>Asta4D affords front-end engineers a friendly environment by separating rendering logic from template files which
        are pure html files. At the mean time, back-end engineers can use the powerful Java language to implement the rendering
        logic without being suffering from the "poor and sometimes magic" template languages.
        </para>
      </listitem>

      <listitem>
        <para>View first without controller</para>
        <para>Asta4D also affords higher productivity than traditional MVC architecture by View First mechanism. And it is also
        easier to change than MVC architecture.</para>
      </listitem>
      
      <listitem>
        <para>Isolate side effect with request handler</para>
        <para>Asta4D imports the conception of "side-effect" from functional programming languages and separating the "side-effect"
        by request handlers, which afford more flexibility on page rendering because the view layer is side-effect free now. Therefore
        Asta4D allows parallel page rendering in multiple threads as a built-in feature.
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>What does the name of "Asta4D" mean</title>
    <para>The name of Asta4D is from our company's name: astamuse. We explain the "4D" as following ways:</para> 
    
    <itemizedlist>
      <listitem>
        <para>For Designer</para>
        <para>Asta4D consider the design friendliness as the most important factor of itself. We hope web designers can fulfil their
        maximum potential of creativity without squandering their time on the back-end technologies which they could never be adept at.
        </para>
      </listitem>

      <listitem>
        <para>For developer</para>
        <para>We hope Asta4D can help developers to achieve their work more easily. Developers would never be afflicted with complex
        rendering logic because they can use powerful Java language to do whatever they want since the rendering has been split from
        template files. View first also releases developers from the cumbersome MVC architecture, now they have more time to have a cup
        of coffee.</para>
      </listitem>
      
      <listitem>
        <para>4 Dimension</para>
        <para>We believe that Asta4D can act as a wormhole that connects the front-end and the back-end. We can move quicker by Asta4D just
        like we are going through the 4 dimensional space.
        </para>
      </listitem>
    </itemizedlist>
  </section>
</chapter>